@model Reader

@{
    ViewData["Title"] = "Edit the lesson";
}

<div class="text-center">
    <h1 class="display-4">Edit the lesson</h1>
</div>

@{ int lessonToEditId = (int)ViewData["lesson_to_edit_id"]; 
    var classesOptions = ViewData["classes_options"] as List<Class>;
    var subjects = ViewData["subjects"] as List<Subject>;
    var classroomsOptions = ViewData["classrooms_options"] as List<Classroom>; 
    var selectedClass = (string)ViewData["selected_class"];
    var selectedSubject = (string)ViewData["selected_subject"];
    var selectedClassroom = (string)ViewData["selected_classroom"]; }

@using (Html.BeginForm("ValidateEditedData", "Teacher", new { id = lessonToEditId} )) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger"} )

    <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Index", "Teacher" )'">Cancel</button><br><br>

    <strong>@Html.LabelFor(model=>model.EditedLesson.Class, "Class")</strong><br>
    @Html.DropDownListFor(model=>model.EditedLesson.Class, new SelectList(classesOptions, "Name", "Name", selectedClass), "Select the class", new {htmlAttributes = new {@class="form-control"}})<br><br>
    <strong>@Html.LabelFor(model=>model.EditedLesson.Subject, "Subject")</strong><br>
    @Html.DropDownListFor(model=>model.EditedLesson.Subject, new SelectList(subjects, "Name", "Name", selectedSubject), "Select the subject", new {htmlAttributes = new {@class="form-control"}})<br><br>
    <strong>@Html.LabelFor(model=>model.EditedLesson.Classroom, "Classroom")</strong><br>
    @Html.DropDownListFor(model=>model.EditedLesson.Classroom, new SelectList(classroomsOptions, "Number", "Number", selectedClassroom), "Select the classroom", new {htmlAttributes = new {@class="form-control"}})<br><br>

    <button type="submit" class="btn btn-primary">Edit</button>
    <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("DeleteLesson", "Teacher", new { id = lessonToEditId })'">Delete</button>
}