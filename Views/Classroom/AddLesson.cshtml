@model Reader

@{
    ViewData["Title"] = "Add a lesson";
}

<div class="text-center">
    <h1 class="display-4">Add a lesson</h1>
</div>

@{ var classesOptions = ViewData["classes_options"] as List<Class>;
    var subjects = ViewData["subjects"] as List<Subject>;
    var teachersOptions = ViewData["teachers_options"] as List<Teacher>; }

@using (Html.BeginForm("ValidateAddedData", "Classroom", new { chosenClassroom = ViewData["chosen_classroom"], slot = ViewData["slot"] })) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger"} )

    <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Index", "Classroom" )'">Cancel</button><br><br>

    <strong>@Html.LabelFor(model=>model.NewLesson.Class, "Class")</strong><br>
    @Html.DropDownListFor(model=>model.NewLesson.Class, new SelectList(classesOptions, "Id", "Name"), "Select the class", new {htmlAttributes = new {@class="form-control"}})<br><br>
    <strong>@Html.LabelFor(model=>model.NewLesson.Subject, "Subject")</strong><br>
    @Html.DropDownListFor(model=>model.NewLesson.Subject, new SelectList(subjects, "Id", "Name"), "Select the subject", new {htmlAttributes = new {@class="form-control"}})<br><br>
    <strong>@Html.LabelFor(model=>model.NewLesson.Teacher, "Teacher")</strong><br>
    @Html.DropDownListFor(model=>model.NewLesson.Teacher, new SelectList(teachersOptions, "Id", "Surname"), "Select the teacher", new {htmlAttributes = new {@class="form-control"}})<br><br>

    <button type="submit" class="btn btn-primary">Add</button>
}